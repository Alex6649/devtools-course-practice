#############################################
##### Testing
#############################################

set(prefix "${MODULE}")

add_test(
    NAME ${prefix}Can_Run
    COMMAND ${APPLICATION}
)
set_tests_properties (${prefix}Can_Run PROPERTIES
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}Can_Parse_Number
    COMMAND ${APPLICATION} 12
)
set_tests_properties (${prefix}Can_Parse_Number PROPERTIES
    PASS_REGULAR_EXPRESSION "Result: 12"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}Can_Add
    COMMAND ${APPLICATION} 5 + 8
)
set_tests_properties (${prefix}Can_Add PROPERTIES
    PASS_REGULAR_EXPRESSION "Result: 13"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}Can_Substract
    COMMAND ${APPLICATION} 5 - 8
)
set_tests_properties (${prefix}Can_Substract PROPERTIES
    PASS_REGULAR_EXPRESSION "Result: -3"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}Can_Multiply
    COMMAND ${APPLICATION} 3 * 4
)
set_tests_properties (${prefix}Can_Multiply PROPERTIES
    PASS_REGULAR_EXPRESSION "Result: 12"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}Can_Divide
    COMMAND ${APPLICATION} 12 / 6
)
set_tests_properties (${prefix}Can_Divide PROPERTIES
    PASS_REGULAR_EXPRESSION "Result: 2"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}Exception_on_Division_by_Zero
    COMMAND ${APPLICATION} 12 / 0
)
set_tests_properties (${prefix}Exception_on_Division_by_Zero PROPERTIES
    PASS_REGULAR_EXPRESSION "DIVISION_BY_ZERO"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}Can_Exponent
    COMMAND ${APPLICATION} 2 ^ 3
)
set_tests_properties (${prefix}Can_Exponent PROPERTIES
    PASS_REGULAR_EXPRESSION "Result: 8"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}Exponent_Undefined
    COMMAND ${APPLICATION} 0 ^ 0
)
set_tests_properties (${prefix}Exponent_Undefined PROPERTIES
    PASS_REGULAR_EXPRESSION "UNDEFINED_OPERATION"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}Exponent_Base_Zero_Negative
    COMMAND ${APPLICATION} 0 ^ ( 0 - 1 )
)
set_tests_properties (${prefix}Exponent_Base_Zero_Negative PROPERTIES
    PASS_REGULAR_EXPRESSION "DIVISION_BY_ZERO"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}Exponent_Base_One_Negative
    COMMAND ${APPLICATION} 1 ^ ( 0 - 1 )
)
set_tests_properties (${prefix}Exponent_Base_One_Negative PROPERTIES
    PASS_REGULAR_EXPRESSION "Result: 1"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}Exponent_Negative
    COMMAND ${APPLICATION} 2 ^ ( 0 - 1 )
)
set_tests_properties (${prefix}Exponent_Negative PROPERTIES
    PASS_REGULAR_EXPRESSION "Result: 0"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}Throw_On_Invalid_Symbols
    COMMAND ${APPLICATION} 2 + f
)
set_tests_properties (${prefix}Throw_On_Invalid_Symbols PROPERTIES
    PASS_REGULAR_EXPRESSION "INVALID_SYMBOL"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}Skip_Multiple_Spaces
    COMMAND ${APPLICATION}   2  +  3  
)
set_tests_properties (${prefix}Skip_Multiple_Spaces PROPERTIES
    PASS_REGULAR_EXPRESSION "Result: 5"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}Serial_Calculations
    COMMAND ${APPLICATION} (1 + 2) * 4 + 3
)
set_tests_properties (${prefix}Serial_Calculations PROPERTIES
    PASS_REGULAR_EXPRESSION "Result: 15"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}Serial_Calculations_2
    COMMAND ${APPLICATION} 4 + 6 * 2 / (1 - 3) ^ 2
)
set_tests_properties (${prefix}Serial_Calculations_2 PROPERTIES
    PASS_REGULAR_EXPRESSION "Result: 7"
    LABELS "${MODULE}")
